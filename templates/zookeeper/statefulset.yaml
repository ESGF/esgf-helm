# Headless service providing a network domain for the stateful set
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-zk"
  labels:
{{ include "default-labels" . | indent 4 }}
    component: zookeeper
spec:
  ports:
    - name: follower
      port: 2888
    - name: leader-election
      port: 3888
  clusterIP: None
  selector:
    release: {{ .Release.Name }}
    component: zookeeper
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}-zk"
  labels:
{{ include "default-labels" . | indent 4 }}
    component: zookeeper
spec:
  # Select pods on release and component only, rather than all labels
  # This means that the selector will match all pods from all versions of the chart when upgrading
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      component: zookeeper
  # This is the service for the network domain
  serviceName: "{{ .Release.Name }}-zk"
  # Currently, this cannot be scaled dynamically. It must be odd and >= 3 for quorum to be maintained
  replicas: {{ .Values.zookeeper.replicas }}
  template:
    metadata:
      labels:
{{ include "default-labels" . | indent 8 }}
        component: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: "{{ .Values.zookeeper.image }}:{{ .Values.zookeeper.imageTag }}"
          imagePullPolicy: {{ default "" .Values.zookeeper.imagePullPolicy | quote }}
          ports:
            - name: client
              containerPort: 2181
            - name: follower
              containerPort: 2888
            - name: leader-election
              containerPort: 3888
          volumeMounts:
            - name: zk-data
              mountPath: /data
            - name: zk-datalog
              mountPath: /datalog
          env:
            - name: ZOO_REPLICAS
              value: "{{ .Values.zookeeper.replicas }}"
            - name: ZOO_INIT_LIMIT
              value: "10"
            - name: ZOO_SYNC_LIMIT
              value: "5"
          # Currently, the statefulset ordinal is not available independently
          # of the hostname, so we need to rip it out
          # We also build the server list using 0.0.0.0 as the address of the current
          # server to avoid port binding errors due to the DNS entry not being ready
          command:
            - "/bin/sh"
            - "-c"
            - |
              set -e
              # We only need to do this stuff if we are running clustered, i.e. replicas > 1
              if [ "$ZOO_REPLICAS" -gt "1" ]; then
                export ZOO_MY_ID="${HOSTNAME##*-}"
                ZOO_SERVERS=""
                for i in $(seq 0 $(($ZOO_REPLICAS - 1))); do
                  if [[ "$i" = "$ZOO_MY_ID" ]]; then
                    ZOO_SERVERS="$ZOO_SERVERS server.$i=0.0.0.0:2888:3888"
                  else
                    ZOO_SERVERS="$ZOO_SERVERS server.$i={{ .Release.Name }}-zk-$i.{{ .Release.Name }}-zk:2888:3888"
                  fi
                done
                export ZOO_SERVERS
              fi
              env
              exec /docker-entrypoint.sh zkServer.sh start-foreground
          # For readiness, check that the stat 4 letter work returns something with a Zxid
          readinessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "echo stat | nc -w 1 127.0.0.1 2181 | grep -q Zxid"
            initialDelaySeconds: 10
            periodSeconds: 10
          # For liveness, check that the node is running using the ruok 4 letter word
          livenessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "echo ruok | nc -w 1 127.0.0.1 2181 | grep -q imok"
            initialDelaySeconds: 60
            periodSeconds: 10
          resources:
{{ toYaml .Values.zookeeper.resources | indent 12 }}
      volumes:
        - name: zk-data
          emptyDir: {}
        - name: zk-datalog
          emptyDir: {}
