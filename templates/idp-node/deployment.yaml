apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-idp-node"
  labels:
{{ include "default-labels" . | indent 4 }}
    component: idp-node
spec:
  replicas: {{ .Values.idpNode.replicas }}
  # Select pods on release and component only, rather than all labels
  # This means that the selector will match all pods from all versions of the chart when upgrading
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      component: idp-node
  template:
    metadata:
      labels:
{{ include "default-labels" . | indent 8 }}
        component: idp-node
      annotations:
        checksum/postgres-passwords: {{ include (print $.Template.BasePath "/postgres/secret.yaml") . | sha256sum }}
    spec:
      containers:
        - name: idp-node
          image: "{{ .Values.idpNode.image }}:{{ .Values.idpNode.imageTag }}"
          imagePullPolicy: {{ default "" .Values.idpNode.imagePullPolicy | quote }}
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /esgf-idp/
              port: 8080
              # This endpoint requires HTTPS, so simulate it
              httpHeaders:
                - name: Host
                  value: "{{ .Values.hostname }}"
                - name: X-Forwarded-Proto
                  value: https
            initialDelaySeconds: 10
            periodSeconds: 10
          env:
            - name: ESGF_HOSTNAME
              value: "{{ .Values.hostname }}"
            - name: ESGF_DATABASE_HOST
              value: "{{ .Release.Name }}-postgres"
            - name: ESGF_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-postgres-passwords"
                  key: dbsuper
          resources:
{{ toYaml .Values.idpNode.resources | indent 12 }}
