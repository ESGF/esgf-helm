apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-auth-postgres"
  labels:
{{ include "default-labels" . | indent 4 }}
    component: auth-postgres
spec:
  replicas: 1
  # Select pods on release and component only, rather than all labels
  # This means that the selector will match all pods from all versions of the chart when upgrading
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      component: auth-postgres
  template:
    metadata:
      labels:
{{ include "default-labels" . | indent 8 }}
        component: auth-postgres
      annotations:
        checksum/auth-secrets: {{ include (print $.Template.BasePath "/auth/secret.yaml") . | sha256sum }}
    spec:
      containers:
        - name: auth-postgres
          image: "{{ .Values.auth.postgres.image }}:{{ .Values.auth.postgres.imageTag }}"
          imagePullPolicy: {{ default "" .Values.auth.postgres.imagePullPolicy | quote }}
          ports:
            - name: postgres
              containerPort: 5432
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 10
            periodSeconds: 10
          env:
            - name: POSTGRES_USER
              value: authuser
            - name: POSTGRES_DB
              value: auth
            - name: POSTGRES_INITDB_ARGS
              value: "--encoding=UTF-8"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-auth-secrets"
                  key: "auth-database-password"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          resources:
{{ toYaml .Values.auth.postgres.resources | indent 12 }}
      volumes:
        - name: postgres-data
          emptyDir: {}
