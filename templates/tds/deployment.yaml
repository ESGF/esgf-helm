apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ .Release.Name }}-tds-data"
  labels:
{{ include "default-labels" . | indent 4 }}
    component: tds
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: {{ .Values.tds.data.storageClass | default "" | quote }}
  resources:
{{ toYaml .Values.tds.data.resources | indent 4 }}
{{- if .Values.tds.data.selector }}
{{ toYaml .Values.tds.data.selector | indent 2 }}
{{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ .Release.Name }}-tds-content"
  labels:
{{ include "default-labels" . | indent 4 }}
    component: tds
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: {{ .Values.tds.content.storageClass | default "" | quote }}
  resources:
{{ toYaml .Values.tds.content.resources | indent 4 }}
{{- if .Values.tds.content.selector }}
{{ toYaml .Values.tds.content.selector | indent 2 }}
{{- end }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-tds"
  labels:
{{ include "default-labels" . | indent 4 }}
    component: tds
spec:
  replicas: {{ .Values.tds.replicas }}
  # Select pods on release and component only, rather than all labels
  # This means that the selector will match all pods from all versions of the chart when upgrading
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      component: tds
  template:
    metadata:
      labels:
{{ include "default-labels" . | indent 8 }}
        component: tds
      annotations:
        checksum/auth-secrets: {{ include (print $.Template.BasePath "/auth/secret.yaml") . | sha256sum }}
        checksum/cog-secrets: {{ include (print $.Template.BasePath "/cog/secret.yaml") . | sha256sum }}
        checksum/trust-bundle: {{ include (print $.Template.BasePath "/certificates/trust-bundle-configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: tds
          image: "{{ .Values.tds.image }}:{{ .Values.tds.imageTag }}"
          imagePullPolicy: {{ default "" .Values.tds.imagePullPolicy | quote }}
          ports:
            - name: http
              containerPort: 8080
          # The readiness and liveness probes run the same thing, but the liveness
          # probe just waits a while before kicking in whereas the readiness probe
          # starts straight away
          readinessProbe:
            httpGet: &probe
              path: /thredds
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet: *probe
            initialDelaySeconds: 60
            periodSeconds: 10
          env:
            - name: ESGF_HOSTNAME
              value: "{{ .Values.hostname }}"
            - name: ESGF_DATABASE_HOST
              value: "{{ .Release.Name }}-postgres"
            - name: ESGF_SOLR_HOSTNAME
              value: "{{ .Release.Name }}-solr:8983"
            - name: ESGF_COOKIE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-auth-secrets"
                  key: "shared-cookie-secret-key"
            - name: ESGF_TDS_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-cog-secrets"
                  key: "rootadmin-password"
          volumeMounts:
            - mountPath: /esg/content/thredds/esgcet
              name: tds-content
            - mountPath: /esg/data
              name: tds-data
              readOnly: true
            - mountPath: /esg/certificates/esg-trust-bundle.pem
              name: trust-bundle
              subPath: esg-trust-bundle.pem
          resources:
{{ toYaml .Values.tds.resources | indent 12 }}
      volumes:
        - name: tds-content
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-tds-content"
        - name: tds-data
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-tds-data"
        - name: trust-bundle
          configMap:
            name: "{{ .Release.Name }}-trust-bundle"
