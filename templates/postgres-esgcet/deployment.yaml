{{- if .Values.postgresEsgcet.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ .Release.Name }}-postgres-esgcet"
  labels:
{{ include "default-labels" . | indent 4 }}
    component: postgres-esgcet
spec:
  accessModes:
    - ReadWriteOnce
{{- if .Values.postgresEsgcet.persistence.storageClass }}
  storageClassName: "{{ .Values.postgresEsgcet.persistence.storageClass }}"
{{- end }}
  resources:
    requests:
      storage: {{ .Values.postgresEsgcet.persistence.size }}
  selector:
{{ toYaml .Values.postgresEsgcet.persistence.selector | indent 4 }}
---
{{- end }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-postgres-esgcet"
  labels:
{{ include "default-labels" . | indent 4 }}
    component: postgres-esgcet
spec:
  replicas: 1
  # Select pods on release and component only, rather than all labels
  # This means that the selector will match all pods from all versions of the chart when upgrading
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      component: postgres-esgcet
  template:
    metadata:
      labels:
{{ include "default-labels" . | indent 8 }}
        component: postgres-esgcet
      annotations:
        checksum/postgres-esgcet-secrets: {{ include (print $.Template.BasePath "/postgres-esgcet/secret.yaml") . | sha256sum }}
        checksum/cog-secrets: {{ include (print $.Template.BasePath "/cog/secret.yaml") . | sha256sum }}
    spec:
      containers:
        - name: postgres-esgcet
          image: "{{ .Values.postgresEsgcet.image }}:{{ .Values.postgresEsgcet.imageTag }}"
          imagePullPolicy: {{ default "" .Values.postgresEsgcet.imagePullPolicy | quote }}
          ports:
            - name: postgres
              containerPort: 5432
          # The readiness and liveness probes run the same thing, but the liveness
          # probe just waits a while before kicking in whereas the readiness probe
          # starts straight away
          readinessProbe:
            tcpSocket: &probe
              port: 5432
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket: *probe
            initialDelaySeconds: 60
            periodSeconds: 10
          env:
            - name: POSTGRESQL_DATABASE
              value: esgcet
            - name: POSTGRESQL_USER
              value: dbsuper
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-postgres-esgcet-secrets"
                  key: "database-password"
            - name: ESGF_ESGCET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-postgres-esgcet-secrets"
                  key: database-publisher-password
            - name: ESGF_ROOTADMIN_EMAIL
              value: "CoG@{{ .Values.hostname }}"
            - name: ESGF_ROOTADMIN_USERNAME
              value: rootAdmin
            - name: ESGF_ROOTADMIN_OPENID
              value: https://{{ .Values.hostname }}/esgf-idp/openid/rootAdmin
            - name: ESGF_ROOTADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-cog-secrets"
                  key: rootadmin-password
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/pgsql/data
          resources:
{{ toYaml .Values.postgresEsgcet.resources | indent 12 }}
      volumes:
        - name: postgres-data
{{- if .Values.postgresEsgcet.persistence.enabled }}
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-postgres-esgcet"
{{- else }}
          emptyDir: {}
{{- end }}
