apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-slcs"
  labels:
{{ include "default-labels" . | indent 4 }}
    component: slcs
spec:
  replicas: {{ .Values.slcs.replicas }}
  # Select pods on release and component only, rather than all labels
  # This means that the selector will match all pods from all versions of the chart when upgrading
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      component: slcs
  template:
    metadata:
      labels:
{{ include "default-labels" . | indent 8 }}
        component: slcs
      annotations:
        checksum/postgres-passwords: {{ include (print $.Template.BasePath "/postgres/secret.yaml") . | sha256sum }}
        checksum/slcs-secrets: {{ include (print $.Template.BasePath "/slcs/secret.yaml") . | sha256sum }}
        checksum/slcs-ca: {{ include (print $.Template.BasePath "/slcs/secret-slcs-ca.yaml") . | sha256sum }}
    spec:
      containers:
        - name: slcs
          image: "{{ .Values.slcs.image }}:{{ .Values.slcs.imageTag }}"
          imagePullPolicy: {{ default "" .Values.slcs.imagePullPolicy | quote }}
          ports:
            - name: http
              containerPort: 8000
          livenessProbe:
            httpGet:
              path: /esgf-slcs
              port: 8000
              # The ALLOWED_HOSTS setting means that the app will only accept
              # requests from the correct host
              httpHeaders:
                - name: Host
                  value: "{{ .Values.hostname }}"
                - name: X-Forwarded-Host
                  value: "{{ .Values.hostname }}"
                - name: X-Forwarded-Proto
                  value: https
            initialDelaySeconds: 10
            periodSeconds: 10
          env:
            # Generic Django settings
            - name: SCRIPT_NAME
              value: /esgf-slcs
            - name: DJANGO_ALLOWED_HOSTS
              value: "{{ .Values.hostname }}"
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-slcs-secrets"
                  key: "slcs-secret-key"
            # SLCS database
            - name: DJANGO_DATABASE_DEFAULT_ENGINE
              value: django.db.backends.postgresql
            - name: DJANGO_DATABASE_DEFAULT_NAME
              value: slcs
            - name: DJANGO_DATABASE_DEFAULT_HOST
              value: "{{ .Release.Name }}-slcs-postgres"
            - name: DJANGO_DATABASE_DEFAULT_PORT
              value: "5432"
            - name: DJANGO_DATABASE_DEFAULT_USER
              value: slcsuser
            - name: DJANGO_DATABASE_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-slcs-secrets"
                  key: "slcs-database-password"
            # ESGF User database
            - name: DJANGO_DATABASE_USERDB_ENGINE
              value: django.db.backends.postgresql
            - name: DJANGO_DATABASE_USERDB_NAME
              value: esgcet
            - name: DJANGO_DATABASE_USERDB_HOST
              value: "{{ .Release.Name }}-postgres"
            - name: DJANGO_DATABASE_USERDB_PORT
              value: "5432"
            - name: DJANGO_DATABASE_USERDB_USER
              value: dbsuper
            - name: DJANGO_DATABASE_USERDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-postgres-passwords"
                  key: dbsuper
            # Other SLCS-specific settings
            - name: ESGF_SLCS_URL
              value: "https://{{ .Values.hostname }}/esgf-slcs"
            - name: ESGF_SLCS_BASIC_AUTH_REALM
              value: "{{ .Values.hostname }}"
            - name: ONLINECA_CERT_SUBJECT_TEMPLATE
              value: /DC=esgf/CN=$$OPENID
            - name: ONLINECA_CERT_FILEPATH
              value: /esg/certificates/slcsca/ca.crt
            - name: ONLINECA_KEY_FILEPATH
              value: /esg/certificates/slcsca/ca.key
            - name: ONLINECA_TRUSTROOTS_DIR
              value: /esg/certificates/slcsca/trustroots
          volumeMounts:
            - mountPath: /esg/certificates/slcsca
              name: slcsca
              readOnly: true
            - mountPath: /esg/certificates/slcsca-trustroots
              name: trustroots
          resources:
{{ toYaml .Values.slcs.resources | indent 12 }}
      volumes:
        - name: slcsca
          secret:
            secretName: "{{ .Release.Name }}-slcs-ca"
        - name: trustroots
          emptyDir: {}
